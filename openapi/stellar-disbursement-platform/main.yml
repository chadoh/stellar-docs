swagger: '2.0'
info:
  title: Stellar Disbursement Platform API
  version: ''
  description: ''
paths:
  /login:
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/json:
              token: >-
                eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoidXNlci1pZCIsImVtYWlsIjoiZW1haWxAZW1haWwuY29tIiwicm9sZXMiOlt7Im5hbWUiOiJTdXBlcnZpc29yIn1dfSwiZXhwIjoxNjc1OTYyOTQ3fQ.4Zj9yBXch-iuFYF-kc_EhHPxjpwp_egMOLbOv4bZKO1MFvcmEgZ5MlXH1_1fZfgUxaNBcMCdRM6MGSqKocwGnA
          schema:
            type: object
            properties:
              token:
                type: string
            example:
              token: >-
                eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoidXNlci1pZCIsImVtYWlsIjoiZW1haWxAZW1haWwuY29tIiwicm9sZXMiOlt7Im5hbWUiOiJTdXBlcnZpc29yIn1dfSwiZXhwIjoxNjc1OTYyOTQ3fQ.4Zj9yBXch-iuFYF-kc_EhHPxjpwp_egMOLbOv4bZKO1MFvcmEgZ5MlXH1_1fZfgUxaNBcMCdRM6MGSqKocwGnA
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Invalid credentials
              extras:
                status: 400
                message: Invalid username or password
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Invalid credentials
              extras:
                status: 400
                message: Invalid username or password
      summary: Log In
      operationId: Log In
      description: ''
      tags:
        - Authentication
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
            example:
              username: reece
              password: mysecret
      produces:
        - application/json
  /refresh_token:
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/json:
              token: >-
                eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoidXNlci1pZCIsImVtYWlsIjoiZW1haWxAZW1haWwuY29tIiwicm9sZXMiOlt7Im5hbWUiOiJTdXBlcnZpc29yIn1dfSwiZXhwIjoxNjc1OTYyOTQ3fQ.4Zj9yBXch-iuFYF-kc_EhHPxjpwp_egMOLbOv4bZKO1MFvcmEgZ5MlXH1_1fZfgUxaNBcMCdRM6MGSqKocwGnA
          schema:
            type: object
            properties:
              token:
                type: string
            example:
              token: >-
                eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoidXNlci1pZCIsImVtYWlsIjoiZW1haWxAZW1haWwuY29tIiwicm9sZXMiOlt7Im5hbWUiOiJTdXBlcnZpc29yIn1dfSwiZXhwIjoxNjc1OTYyOTQ3fQ.4Zj9yBXch-iuFYF-kc_EhHPxjpwp_egMOLbOv4bZKO1MFvcmEgZ5MlXH1_1fZfgUxaNBcMCdRM6MGSqKocwGnA
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Invalid token
              extras:
                status: 400
                message: Token is expired or invalid
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Invalid token
              extras:
                status: 400
                message: Token is expired or invalid
      summary: Refresh Token
      operationId: Refresh Token
      description: ''
      tags:
        - Authentication
      parameters: []
      produces:
        - application/json
      security:
        - oauth2: []
  /disbursements:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
      summary: List All Disbursements
      operationId: List All Disbursements
      description: ''
      tags:
        - Disbursements
      parameters:
        - name: page
          in: query
          description: The page requested.
          required: false
          type: number
          default: 1
        - name: page_limit
          in: query
          description: Define how many results will be returned in the response.
          required: false
          type: number
          default: 20
        - name: q
          in: query
          description: a search term used to query through the disbursements names.
          required: false
          type: string
        - name: status
          in: query
          description: exact match on the status of the disbursement.
          required: false
          x-example: DRAFT
          type: string
          enum:
            - DRAFT
            - READY
            - STARTED
            - PAUSED
            - COMPLETED
        - name: created_at_after
          in: query
          description: >-
            only return disbursements that are created after this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: created_at_before
          in: query
          description: >-
            only return disbursements that are created before this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: sort
          in: query
          description: field used to sort disbursements
          required: false
          type: string
          default: created_at
          enum:
            - name
            - created_at
        - name: direction
          in: query
          description: direction for sorting disbursements.
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      produces:
        - application/json
      security:
        - oauth2: []
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/json:
              id: 619da857-8725-4c58-933d-c120a458e0f5
              name: Disbursement Name
              upload_by:
                id: 88b0ad24-8bab-4f19-903f-cb2da90108a2
                name: Marcelo
              total_payments: 0
              total_payments_sent: 0
              total_payments_remaining: 0
              total_payments_failed: 0
              amount_disbursed: '0.0000000'
              total_amount: '0.0000000'
              average_amount: '0.0000000'
              country:
                code: ua
                name: Ukraine
                language: uk
                created_at: '2023-02-03T10:45:51.000Z'
                updated_at: '2023-02-03T10:45:51.000Z'
              wallet:
                id: e2de8544-b7e2-40a9-ad40-411f70d5c4bf
                name: Vibrant
                homepage: https://vibrantapp.com
              asset:
                id: 25923001-508a-4629-9186-c41211b2a3d0
                code: USDC
                issuer: GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN
                name: USD Coin
              status: DRAFT
              status_history:
                - user_id: null
                  status: DRAFT
                  timestamp: '2023-02-03T10:45:51.000Z'
              created_at: '2023-02-03T10:45:51.000Z'
              updated_at: '2023-02-03T10:45:51.000Z'
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              upload_by:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
              total_payments:
                type: number
              total_payments_sent:
                type: number
              total_payments_remaining:
                type: number
              total_payments_failed:
                type: number
              amount_disbursed:
                type: string
              total_amount:
                type: string
              average_amount:
                type: string
              country:
                type: object
                properties:
                  code:
                    type: string
                  name:
                    type: string
                  language:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
              wallet:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  homepage:
                    type: string
              asset:
                type: object
                properties:
                  id:
                    type: string
                  code:
                    type: string
                  issuer:
                    type: string
                  name:
                    type: string
              status:
                type: string
              status_history:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: string
                    status:
                      type: string
                    timestamp:
                      type: string
              created_at:
                type: string
              updated_at:
                type: string
            example:
              id: 619da857-8725-4c58-933d-c120a458e0f5
              name: Disbursement Name
              upload_by:
                id: 88b0ad24-8bab-4f19-903f-cb2da90108a2
                name: Marcelo
              total_payments: 0
              total_payments_sent: 0
              total_payments_remaining: 0
              total_payments_failed: 0
              amount_disbursed: '0.0000000'
              total_amount: '0.0000000'
              average_amount: '0.0000000'
              country:
                code: ua
                name: Ukraine
                language: uk
                created_at: '2023-02-03T10:45:51.000Z'
                updated_at: '2023-02-03T10:45:51.000Z'
              wallet:
                id: e2de8544-b7e2-40a9-ad40-411f70d5c4bf
                name: Vibrant
                homepage: https://vibrantapp.com
              asset:
                id: 25923001-508a-4629-9186-c41211b2a3d0
                code: USDC
                issuer: GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN
                name: USD Coin
              status: DRAFT
              status_history:
                - user_id: null
                  status: DRAFT
                  timestamp: '2023-02-03T10:45:51.000Z'
              created_at: '2023-02-03T10:45:51.000Z'
              updated_at: '2023-02-03T10:45:51.000Z'
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Bad request
              extras:
                status: 400
                message: Invalid country code provided
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Bad request
              extras:
                status: 400
                message: Invalid country code provided
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
        '403':
          description: Forbidden
          headers: {}
          examples:
            application/json:
              error: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Forbidden
      summary: Create Disbursements
      operationId: Create Disbursements
      description: ''
      tags:
        - Disbursements
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
              wallet_id:
                type: string
              asset_id:
                type: string
              country_code:
                type: string
            example:
              name: My New Disbursement name
              wallet_id: e2de8544-b7e2-40a9-ad40-411f70d5c4bf
              asset_id: e2de8544-b7e2-40a9-ad40-411f70d5c4bf
              country_code: ua
      produces:
        - application/json
      security:
        - oauth2: []
  /disbursements/{id}:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              id: 619da857-8725-4c58-933d-c120a458e0f5
              name: Disbursement Name
              upload_by:
                id: 88b0ad24-8bab-4f19-903f-cb2da90108a2
                name: Marcelo
              total_payments: 2
              total_payments_sent: 1
              total_payments_remaining: 1
              total_payments_failed: 0
              amount_disbursed: '75.000000'
              total_amount: '150.0000000'
              average_amount: '75.00000000'
              country:
                code: ua
                name: Ukraine
                language: uk
                created_at: '2023-02-03T10:45:51.000Z'
                updated_at: '2023-02-03T10:45:51.000Z'
              wallet:
                id: e2de8544-b7e2-40a9-ad40-411f70d5c4bf
                name: Vibrant
                homepage: https://vibrantapp.com
              asset:
                id: 25923001-508a-4629-9186-c41211b2a3d0
                code: USDC
                issuer: GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN
                name: USD Coin
              beneficiaries:
                - id: 2ec7f1f9-add3-4e6d-9d14-bd8ac5e88872
                  phone_number: '+380441234567'
                  payment_id: b6b667ad-6cc2-46cf-9be7-561daace7d48
                  amount: '75.0000000'
                  stellar_address: GAUETA6XCPFIZNJQLETG5JR3GGNTJIXXRDIIY4D5QYU2JR6RPUFEUCVZ
                  stellar_transaction_id: >-
                    614942ad90df7f8b47f8a7dfa5d8bb34e577802c7d687edd067437202959d0ef
                  status: SUCCESS
                - payment_id: b6b667ad-6cc2-46cf-9be7-561daace7d48
                  phone_number: '+380441234567'
                  amount: '75.0000000'
                  stellar_address: GAUETA6XCPFIZNJQLETG5JR3GGNTJIXXRDIIY4D5QYU2JR6RPUFEUCVZ
                  stellar_transaction_id: >-
                    614942ad90df7f8b47f8a7dfa5d8bb34e577802c7d687edd067437202959d0ef
                  status: READY
              status_history:
                - user_id: null
                  status: DRAFT
                  timestamp: '2023-02-03T10:45:51.000Z'
                - user_id: 2ec7f1f9-add3-4e6d-9d14-bd8ac5e88872
                  status: DRAFT
                  timestamp: '2023-02-03T10:45:51.000Z'
                - user_id: null
                  status: READY
                  timestamp: '2023-02-03T11:45:51.000Z'
                - user_id: 2ec7f1f9-add3-4e6d-9d14-bd8ac5e88872
                  status: READY
                  timestamp: '2023-02-03T11:45:51.000Z'
              status: READY
              created_at: '2023-02-03T10:45:51.000Z'
              updated_at: '2023-02-03T11:45:51.000Z'
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              upload_by:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
              total_payments:
                type: number
              total_payments_sent:
                type: number
              total_payments_remaining:
                type: number
              total_payments_failed:
                type: number
              amount_disbursed:
                type: string
              total_amount:
                type: string
              average_amount:
                type: string
              country:
                type: object
                properties:
                  code:
                    type: string
                  name:
                    type: string
                  language:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
              wallet:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  homepage:
                    type: string
              asset:
                type: object
                properties:
                  id:
                    type: string
                  code:
                    type: string
                  issuer:
                    type: string
                  name:
                    type: string
              beneficiaries:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    phone_number:
                      type: string
                    payment_id:
                      type: string
                    amount:
                      type: string
                    stellar_address:
                      type: string
                    stellar_transaction_id:
                      type: string
                    status:
                      type: string
                  required:
                    - payment_id
                    - phone_number
                    - amount
                    - stellar_address
                    - stellar_transaction_id
                    - status
              status_history:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: string
                    status:
                      type: string
                    timestamp:
                      type: string
                  required:
                    - user_id
                    - status
                    - timestamp
              status:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
            example:
              id: 619da857-8725-4c58-933d-c120a458e0f5
              name: Disbursement Name
              upload_by:
                id: 88b0ad24-8bab-4f19-903f-cb2da90108a2
                name: Marcelo
              total_payments: 2
              total_payments_sent: 1
              total_payments_remaining: 1
              total_payments_failed: 0
              amount_disbursed: '75.000000'
              total_amount: '150.0000000'
              average_amount: '75.00000000'
              country:
                code: ua
                name: Ukraine
                language: uk
                created_at: '2023-02-03T10:45:51.000Z'
                updated_at: '2023-02-03T10:45:51.000Z'
              wallet:
                id: e2de8544-b7e2-40a9-ad40-411f70d5c4bf
                name: Vibrant
                homepage: https://vibrantapp.com
              asset:
                id: 25923001-508a-4629-9186-c41211b2a3d0
                code: USDC
                issuer: GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN
                name: USD Coin
              beneficiaries:
                - id: 2ec7f1f9-add3-4e6d-9d14-bd8ac5e88872
                  phone_number: '+380441234567'
                  payment_id: b6b667ad-6cc2-46cf-9be7-561daace7d48
                  amount: '75.0000000'
                  stellar_address: GAUETA6XCPFIZNJQLETG5JR3GGNTJIXXRDIIY4D5QYU2JR6RPUFEUCVZ
                  stellar_transaction_id: >-
                    614942ad90df7f8b47f8a7dfa5d8bb34e577802c7d687edd067437202959d0ef
                  status: SUCCESS
                - payment_id: b6b667ad-6cc2-46cf-9be7-561daace7d48
                  phone_number: '+380441234567'
                  amount: '75.0000000'
                  stellar_address: GAUETA6XCPFIZNJQLETG5JR3GGNTJIXXRDIIY4D5QYU2JR6RPUFEUCVZ
                  stellar_transaction_id: >-
                    614942ad90df7f8b47f8a7dfa5d8bb34e577802c7d687edd067437202959d0ef
                  status: READY
              status_history:
                - user_id: null
                  status: DRAFT
                  timestamp: '2023-02-03T10:45:51.000Z'
                - user_id: 2ec7f1f9-add3-4e6d-9d14-bd8ac5e88872
                  status: DRAFT
                  timestamp: '2023-02-03T10:45:51.000Z'
                - user_id: null
                  status: READY
                  timestamp: '2023-02-03T11:45:51.000Z'
                - user_id: 2ec7f1f9-add3-4e6d-9d14-bd8ac5e88872
                  status: READY
                  timestamp: '2023-02-03T11:45:51.000Z'
              status: READY
              created_at: '2023-02-03T10:45:51.000Z'
              updated_at: '2023-02-03T11:45:51.000Z'
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: Retrieve a Disbursement
      operationId: Retrieve a Disbursement
      description: ''
      tags:
        - Disbursements
      parameters:
        - &ref_0
          name: id
          in: path
          description: ID of the `Disbursement`.
          required: true
          type: string
      produces:
        - application/json
      security:
        - oauth2: []
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              id: 619da857-8725-4c58-933d-c120a458e0f5
              name: Disbursement Name
              upload_by:
                id: 88b0ad24-8bab-4f19-903f-cb2da90108a2
                name: Marcelo
              total_payments: 20
              total_payments_sent: 0
              total_payments_remaining: 20
              total_payments_failed: 0
              amount_disbursed: '0.000000'
              total_amount: '0.0000000'
              average_amount: '0.00000000'
              country:
                code: ua
                name: Ukraine
                language: uk
                created_at: '2023-02-03T10:45:51.000Z'
                updated_at: '2023-02-03T10:45:51.000Z'
              wallet:
                id: e2de8544-b7e2-40a9-ad40-411f70d5c4bf
                name: Vibrant
                homepage: https://vibrantapp.com
              asset:
                id: 25923001-508a-4629-9186-c41211b2a3d0
                code: USDC
                issuer: GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN
                name: USD Coin
              status: DRAFT
              status_history:
                - user_id: null
                  status: DRAFT
                  timestamp: '2023-02-03T10:45:51.000Z'
                - user_id: null
                  status: READY
                  timestamp: '2023-02-03T11:45:51.000Z'
              created_at: '2023-02-03T10:45:51.000Z'
              updated_at: '2023-02-03T11:45:51.000Z'
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              upload_by:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
              total_payments:
                type: number
              total_payments_sent:
                type: number
              total_payments_remaining:
                type: number
              total_payments_failed:
                type: number
              amount_disbursed:
                type: string
              total_amount:
                type: string
              average_amount:
                type: string
              country:
                type: object
                properties:
                  code:
                    type: string
                  name:
                    type: string
                  language:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
              wallet:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  homepage:
                    type: string
              asset:
                type: object
                properties:
                  id:
                    type: string
                  code:
                    type: string
                  issuer:
                    type: string
                  name:
                    type: string
              status:
                type: string
              status_history:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: string
                    status:
                      type: string
                    timestamp:
                      type: string
                  required:
                    - user_id
                    - status
                    - timestamp
              created_at:
                type: string
              updated_at:
                type: string
            example:
              id: 619da857-8725-4c58-933d-c120a458e0f5
              name: Disbursement Name
              upload_by:
                id: 88b0ad24-8bab-4f19-903f-cb2da90108a2
                name: Marcelo
              total_payments: 20
              total_payments_sent: 0
              total_payments_remaining: 20
              total_payments_failed: 0
              amount_disbursed: '0.000000'
              total_amount: '0.0000000'
              average_amount: '0.00000000'
              country:
                code: ua
                name: Ukraine
                language: uk
                created_at: '2023-02-03T10:45:51.000Z'
                updated_at: '2023-02-03T10:45:51.000Z'
              wallet:
                id: e2de8544-b7e2-40a9-ad40-411f70d5c4bf
                name: Vibrant
                homepage: https://vibrantapp.com
              asset:
                id: 25923001-508a-4629-9186-c41211b2a3d0
                code: USDC
                issuer: GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN
                name: USD Coin
              status: DRAFT
              status_history:
                - user_id: null
                  status: DRAFT
                  timestamp: '2023-02-03T10:45:51.000Z'
                - user_id: null
                  status: READY
                  timestamp: '2023-02-03T11:45:51.000Z'
              created_at: '2023-02-03T10:45:51.000Z'
              updated_at: '2023-02-03T11:45:51.000Z'
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Bad request
              extras:
                status: 400
                message: Invalid country code provided
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Bad request
              extras:
                status: 400
                message: Invalid country code provided
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
        '403':
          description: Forbidden
          headers: {}
          examples:
            application/json:
              error: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Forbidden
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: Update a Disbursement
      operationId: Update a Disbursement
      description: ''
      tags:
        - Disbursements
      parameters:
        - *ref_0
      produces:
        - application/json
      security:
        - oauth2: []
    delete:
      responses:
        '204':
          description: No Content
          headers: {}
          examples: {}
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
        '403':
          description: Forbidden
          headers: {}
          examples:
            application/json:
              error: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Forbidden
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: Delete a Disbursement
      operationId: Delete a Disbursement
      description: ''
      tags:
        - Disbursements
      parameters:
        - *ref_0
      produces:
        - application/json
      security:
        - oauth2: []
  /disbursements/{id}/receivers:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              pagination:
                prev: >-
                  /disbursements/2e15759b-8ffd-43de-b661-87a80fd70241/receivers?page=1
                next: >-
                  /disbursements/2e15759b-8ffd-43de-b661-87a80fd70241/receivers?page=3
                pages: 3
                total: 44
              data:
                - id: 5e7a7f60-1284-4a0b-8be1-1df17ef4d7fd
                  phone_number: '+380507770770'
                  external_id: '1357'
                  receiver_wallet:
                    id: 87dae0ca-0819-4361-9af4-1760a1463dba
                    receiver:
                      id: 5e7a7f60-1284-4a0b-8be1-1df17ef4d7fd
                    wallet:
                      id: 402bf417-11bd-4903-b310-0ce5da11e029
                      name: Vibrant
                    status: DRAFT
                    created_at: '2023-04-17T22:53:49.827645Z'
                    updated_at: '2023-04-17T22:53:49.827645Z'
                  payment:
                    id: 320828bb-3987-4bd4-aa07-037743183af0
                    amount: '91.8600000'
                    stellar_transaction_id: ''
                    stellar_operation_id: ''
                    status: DRAFT
                    asset:
                      id: ef271bfe-1b56-4f55-8579-ae194889e745
                      code: USDC
                      issuer: GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN
                    created_at: '2023-04-18T16:24:16.710071Z'
                    updated_at: '2023-04-18T16:24:16.710071Z'
                  created_at: '2023-04-17T22:53:49.827645Z'
                  updated_at: '2023-04-17T22:53:49.827645Z'
          schema:
            type: object
            properties:
              pagination:
                type: object
                properties:
                  prev:
                    type: string
                  next:
                    type: string
                  pages:
                    type: number
                  total:
                    type: number
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    phone_number:
                      type: string
                    external_id:
                      type: string
                    receiver_wallet:
                      type: object
                      properties:
                        id:
                          type: string
                        receiver:
                          type: object
                          properties:
                            id:
                              type: string
                        wallet:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                        status:
                          type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
                    payment:
                      type: object
                      properties:
                        id:
                          type: string
                        amount:
                          type: string
                        stellar_transaction_id:
                          type: string
                        stellar_operation_id:
                          type: string
                        status:
                          type: string
                        asset:
                          type: object
                          properties:
                            id:
                              type: string
                            code:
                              type: string
                            issuer:
                              type: string
                        created_at:
                          type: string
                        updated_at:
                          type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
            example:
              pagination:
                prev: >-
                  /disbursements/2e15759b-8ffd-43de-b661-87a80fd70241/receivers?page=1
                next: >-
                  /disbursements/2e15759b-8ffd-43de-b661-87a80fd70241/receivers?page=3
                pages: 3
                total: 44
              data:
                - id: 5e7a7f60-1284-4a0b-8be1-1df17ef4d7fd
                  phone_number: '+380507770770'
                  external_id: '1357'
                  receiver_wallet:
                    id: 87dae0ca-0819-4361-9af4-1760a1463dba
                    receiver:
                      id: 5e7a7f60-1284-4a0b-8be1-1df17ef4d7fd
                    wallet:
                      id: 402bf417-11bd-4903-b310-0ce5da11e029
                      name: Vibrant
                    status: DRAFT
                    created_at: '2023-04-17T22:53:49.827645Z'
                    updated_at: '2023-04-17T22:53:49.827645Z'
                  payment:
                    id: 320828bb-3987-4bd4-aa07-037743183af0
                    amount: '91.8600000'
                    stellar_transaction_id: ''
                    stellar_operation_id: ''
                    status: DRAFT
                    asset:
                      id: ef271bfe-1b56-4f55-8579-ae194889e745
                      code: USDC
                      issuer: GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN
                    created_at: '2023-04-18T16:24:16.710071Z'
                    updated_at: '2023-04-18T16:24:16.710071Z'
                  created_at: '2023-04-17T22:53:49.827645Z'
                  updated_at: '2023-04-17T22:53:49.827645Z'
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: List All Disbursement Receivers
      operationId: List All Disbursement Receivers
      description: ''
      tags:
        - Disbursements
      parameters:
        - name: id
          in: path
          description: ID of the Disbursement
          required: true
          type: string
        - name: page
          in: query
          description: The page number to fetch.
          required: false
          type: number
        - name: page_limit
          in: query
          description: The number of records to return per page.
          required: false
          type: number
      produces:
        - application/json
      security:
        - oauth2: []
  /disbursements/{id}/instructions:
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/json:
              message: File uploaded succesfully
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: File uploaded succesfully
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Invalid file format *.xyz
              extras:
                foo: bar
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  foo:
                    type: string
                  message:
                    type: string
            example:
              error: Invalid file format *.xyz
              extras:
                foo: bar
                message: Not authorized
        '401':
          description: Unauthorized
          headers: {}
          examples: {}
        '403':
          description: Forbidden
          headers: {}
          examples:
            application/json:
              error: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Forbidden
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: Upload Disbursement Instructions
      operationId: Upload Disbursement Instructions
      description: ''
      tags:
        - Disbursements
      parameters:
        - &ref_1
          name: id
          in: path
          description: ID of the Disbursement
          required: true
          type: string
      produces:
        - application/json
      security:
        - oauth2: []
    get:
      responses:
        '200':
          description: OK
          headers:
            Content-Disposition:
              type: string
          examples:
            text/csv: ''
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Invalid request
              extras:
                foo: bar
                message: Invalid request parameters
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  foo:
                    type: string
                  message:
                    type: string
            example:
              error: Invalid request
              extras:
                foo: bar
                message: Invalid request parameters
        '401':
          description: Unauthorized
          headers: {}
          examples: {}
        '403':
          description: Forbidden
          headers: {}
          examples: {}
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: Download Disbursement Instructions
      operationId: Download Disbursement Instructions
      description: ''
      tags:
        - Disbursements
      parameters:
        - *ref_1
      produces:
        - text/csv
        - application/json
      security:
        - oauth2: []
  /disbursements/{id}/status:
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              message: Disbursement started
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: Disbursement started
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Bad request
              extras:
                status: 400
                message: Disbursement is not ready to be started
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Bad request
              extras:
                status: 400
                message: Disbursement is not ready to be started
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
        '403':
          description: Forbidden
          headers: {}
          examples:
            application/json:
              error: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Forbidden
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: Update a Disbursement Status
      operationId: Update a Disbursement Status
      description: ''
      tags:
        - Disbursements
      parameters:
        - name: id
          in: path
          description: ID of the disbursement
          required: true
          type: string
      produces:
        - application/json
      security:
        - oauth2: []
  /payments:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
      summary: List All Payments
      operationId: List All Payments
      description: ''
      tags:
        - Payments
      parameters:
        - name: page
          in: query
          description: The page requested.
          required: false
          type: number
          default: 1
        - name: page_limit
          in: query
          description: Define how many results will be returned in the response.
          required: false
          type: number
          default: 20
        - name: status
          in: query
          description: exact match on the status of the payment.
          required: false
          x-example: DRAFT
          type: string
          enum:
            - DRAFT
            - READY
            - PENDING
            - PAUSED
            - SUCCESS
            - FAILED
        - name: receiver_id
          in: query
          description: uuid that represents a receiver in the database
          required: false
          x-example: b6b667ad-6cc2-46cf-9be7-561daace7d48
          type: string
        - name: created_at_after
          in: query
          description: >-
            only return payments that are created after this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: created_at_before
          in: query
          description: >-
            only return payments that are created before this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: sort
          in: query
          description: field used to sort payments
          required: false
          type: string
          default: created_at
          enum:
            - created_at
        - name: direction
          in: query
          description: direction for sorting payments.
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      produces:
        - application/json
      security:
        - oauth2: []
  /payments/{id}:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              id: b6b667ad-6cc2-46cf-9be7-561daace7d48
              amount: '100.000000'
              stellar_transaction_id: 614942ad90df7f8b47f8a7dfa5d8bb34e577802c7d687edd067437202959d0ef
              stellar_operation_id: '192334871807819777'
              status: DRAFT
              status_history:
                - status: DRAFT
                  status_message: Some Message
                  timestamp: '2023-02-03T14:33:50.000Z'
                - status: READY
                  status_message: Some Message
                  timestamp: '2023-02-03T14:45:50.000Z'
              disbursement:
                id: 619da857-8725-4c58-933d-c120a458e0f5
                name: Disbursement Name
                status: DRAFT
                created_at: '2023-02-03T10:45:51.000Z'
                updated_at: '2023-02-03T10:45:51.000Z'
              asset:
                id: 25923001-508a-4629-9186-c41211b2a3d0
                code: USDC
                issuer: GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN
              receiver_wallet:
                id: 2ec7f1f9-add3-4e6d-9d14-bd8ac5e88872
                receiver:
                  id: e7431183-01e4-486a-8a4d-3489bdc07a4e
                wallet:
                  id: 25923001-b7e2-40a9-ad40-411f70d5c4bf
                  name: Vibrant
                stellar_address: GAUETA6XCPFIZNJQLETG5JR3GGNTJIXXRDIIY4D5QYU2JR6RPUFEUCVZ
                stellar_memo: some-memo
                stellar_memo_type: text
                status: REGISTERED
                created_at: '2023-02-03T14:33:50.000Z'
                updated_at: '2023-02-03T14:45:50.000Z'
              created_at: '2023-02-03T14:33:50.000Z'
              updated_at: '2023-02-03T14:33:50.000Z'
          schema:
            type: object
            properties:
              id:
                type: string
              amount:
                type: string
              stellar_transaction_id:
                type: string
              stellar_operation_id:
                type: string
              status:
                type: string
              status_history:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: string
                    status_message:
                      type: string
                    timestamp:
                      type: string
                  required:
                    - status
                    - status_message
                    - timestamp
              disbursement:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  status:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
              asset:
                type: object
                properties:
                  id:
                    type: string
                  code:
                    type: string
                  issuer:
                    type: string
              receiver_wallet:
                type: object
                properties:
                  id:
                    type: string
                  receiver:
                    type: object
                    properties:
                      id:
                        type: string
                  wallet:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                  stellar_address:
                    type: string
                  stellar_memo:
                    type: string
                  stellar_memo_type:
                    type: string
                  status:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
              created_at:
                type: string
              updated_at:
                type: string
            example:
              id: b6b667ad-6cc2-46cf-9be7-561daace7d48
              amount: '100.000000'
              stellar_transaction_id: 614942ad90df7f8b47f8a7dfa5d8bb34e577802c7d687edd067437202959d0ef
              stellar_operation_id: '192334871807819777'
              status: DRAFT
              status_history:
                - status: DRAFT
                  status_message: Some Message
                  timestamp: '2023-02-03T14:33:50.000Z'
                - status: READY
                  status_message: Some Message
                  timestamp: '2023-02-03T14:45:50.000Z'
              disbursement:
                id: 619da857-8725-4c58-933d-c120a458e0f5
                name: Disbursement Name
                status: DRAFT
                created_at: '2023-02-03T10:45:51.000Z'
                updated_at: '2023-02-03T10:45:51.000Z'
              asset:
                id: 25923001-508a-4629-9186-c41211b2a3d0
                code: USDC
                issuer: GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN
              receiver_wallet:
                id: 2ec7f1f9-add3-4e6d-9d14-bd8ac5e88872
                receiver:
                  id: e7431183-01e4-486a-8a4d-3489bdc07a4e
                wallet:
                  id: 25923001-b7e2-40a9-ad40-411f70d5c4bf
                  name: Vibrant
                stellar_address: GAUETA6XCPFIZNJQLETG5JR3GGNTJIXXRDIIY4D5QYU2JR6RPUFEUCVZ
                stellar_memo: some-memo
                stellar_memo_type: text
                status: REGISTERED
                created_at: '2023-02-03T14:33:50.000Z'
                updated_at: '2023-02-03T14:45:50.000Z'
              created_at: '2023-02-03T14:33:50.000Z'
              updated_at: '2023-02-03T14:33:50.000Z'
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Payment not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Payment not found
      summary: Retrieve a Payment
      operationId: Retrieve a Payment
      description: ''
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: ID of the `Payment`.
          required: true
          type: string
      produces:
        - application/json
      security:
        - oauth2: []
  /receivers:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
      summary: List All Receivers
      operationId: List All Receivers
      description: ''
      tags:
        - Receivers
      parameters:
        - name: page
          in: query
          description: The page requested.
          required: false
          type: number
          default: 1
        - name: page_limit
          in: query
          description: Define how many results will be returned in the response.
          required: false
          type: number
          default: 20
        - name: q
          in: query
          description: >-
            a search term used to query through the receivers phone_number,
            email and ID.
          required: false
          type: string
        - name: status
          in: query
          description: exact match on the status of the receiver wallet.
          required: false
          x-example: DRAFT
          type: string
          enum:
            - DRAFT
            - READY
            - REGISTERED
            - FLAGGED
        - name: created_at_after
          in: query
          description: >-
            only return receivers that are created after this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: created_at_before
          in: query
          description: >-
            only return receivers that are created before this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: sort
          in: query
          description: field used to sort receivers
          required: false
          type: string
          default: created_at
          enum:
            - created_at
        - name: direction
          in: query
          description: direction for sorting receivers.
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      produces:
        - application/json
      security:
        - oauth2: []
  /receivers/{id}:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not authorized
              extras:
                status: 401
                message: Not authorized
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Receiver not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Receiver not found
      summary: Retrieve a Receiver
      operationId: Retrieve a Receiver
      description: ''
      tags:
        - Receivers
      parameters:
        - &ref_2
          name: id
          in: path
          description: ID of the `Receiver`.
          required: true
          type: string
      produces:
        - application/json
      security:
        - oauth2: []
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Invalid verification value.
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Invalid verification value.
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized
        '403':
          description: Forbidden
          headers: {}
          examples:
            application/json:
              error: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Forbidden
        '404':
          description: Not Found
          headers: {}
          examples: {}
      summary: Update the Receiver
      operationId: Update the Receiver
      description: ''
      tags:
        - Receivers
      parameters:
        - *ref_2
      produces:
        - application/json
      security:
        - oauth2: []
  /statistics:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized
      summary: Retrieve all Statistics
      operationId: Retrieve all Statistics
      description: ''
      tags:
        - Statistics
      parameters: []
      produces:
        - application/json
      security:
        - oauth2: []
  /statistics/disbursements/{id}:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized
      summary: Retrieve Disbursement-specific Statistics
      operationId: Retrieve Disbursement-specific Statistics
      description: ''
      tags:
        - Statistics
      parameters:
        - name: id
          in: path
          description: ID of the `Disbursement`.
          required: true
          type: string
      produces:
        - application/json
      security:
        - oauth2: []
  /accounts:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              pagination:
                next:
                  exists: true
                  cursor: '2345678'
                prev:
                  exists: false
              accounts:
                - id: 402bc64b-a205-426d-b6b4-cf201b2ff863
                  name: John Doe
                  email: johndoe@test.com
                  role: STAFF
                  status: ACTIVE
                  status_history:
                    - status: ACTIVE
                      timestamp: '2023-02-01T15:55:00.000Z'
                    - status: INACTIVE
                      timestamp: '2023-02-02T15:55:00.000Z'
                    - status: INACTIVE
                      timestamp: '2023-02-03T17:20:00.000Z'
                  created_at: '2023-02-03T15:55:00.000Z'
                  updated_at: '2023-02-03T17:20:00.000Z'
          schema:
            type: object
            properties:
              pagination:
                type: object
                properties:
                  next:
                    type: object
                    properties:
                      exists:
                        type: boolean
                      cursor:
                        type: string
                  prev:
                    type: object
                    properties:
                      exists:
                        type: boolean
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    role:
                      type: string
                    status:
                      type: string
                    status_history:
                      type: array
                      items:
                        type: object
                        properties:
                          status:
                            type: string
                          timestamp:
                            type: string
                        required:
                          - status
                          - timestamp
                    created_at:
                      type: string
                    updated_at:
                      type: string
            example:
              pagination:
                next:
                  exists: true
                  cursor: '2345678'
                prev:
                  exists: false
              accounts:
                - id: 402bc64b-a205-426d-b6b4-cf201b2ff863
                  name: John Doe
                  email: johndoe@test.com
                  role: STAFF
                  status: ACTIVE
                  status_history:
                    - status: ACTIVE
                      timestamp: '2023-02-01T15:55:00.000Z'
                    - status: INACTIVE
                      timestamp: '2023-02-02T15:55:00.000Z'
                    - status: INACTIVE
                      timestamp: '2023-02-03T17:20:00.000Z'
                  created_at: '2023-02-03T15:55:00.000Z'
                  updated_at: '2023-02-03T17:20:00.000Z'
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized
        '403':
          description: Forbidden
          headers: {}
          examples:
            application/json:
              error: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Forbidden
      summary: List All Accounts
      operationId: List All Accounts
      description: ''
      tags:
        - Accounts
      parameters:
        - name: cursor
          in: query
          description: The page cursor.
          required: false
          type: string
        - name: limit
          in: query
          description: Define how many results will be returned in the response.
          required: false
          type: number
          default: 20
      produces:
        - application/json
      security:
        - oauth2: []
  /accounts/{id}:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              id: 402bc64b-a205-426d-b6b4-cf201b2ff863
              name: John Doe
              email: johndoe@test.com
              role: STAFF
              status: ACTIVE
              status_history:
                - status: ACTIVE
                  timestamp: '2023-02-01T15:55:00.000Z'
                - status: INACTIVE
                  timestamp: '2023-02-02T15:55:00.000Z'
                - status: INACTIVE
                  timestamp: '2023-02-03T17:20:00.000Z'
              created_at: '2023-02-03T15:55:00.000Z'
              updated_at: '2023-02-03T17:20:00.000Z'
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              email:
                type: string
              role:
                type: string
              status:
                type: string
              status_history:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: string
                    timestamp:
                      type: string
                  required:
                    - status
                    - timestamp
              created_at:
                type: string
              updated_at:
                type: string
            example:
              id: 402bc64b-a205-426d-b6b4-cf201b2ff863
              name: John Doe
              email: johndoe@test.com
              role: STAFF
              status: ACTIVE
              status_history:
                - status: ACTIVE
                  timestamp: '2023-02-01T15:55:00.000Z'
                - status: INACTIVE
                  timestamp: '2023-02-02T15:55:00.000Z'
                - status: INACTIVE
                  timestamp: '2023-02-03T17:20:00.000Z'
              created_at: '2023-02-03T15:55:00.000Z'
              updated_at: '2023-02-03T17:20:00.000Z'
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized
        '403':
          description: Forbidden
          headers: {}
          examples:
            application/json:
              error: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Forbidden
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not found
      summary: Retrieve an Account
      operationId: Retrieve an Account
      description: >-
        Regular staff can only see their own account. Owners can see any
        account.
      tags:
        - Accounts
      parameters:
        - &ref_3
          name: id
          in: path
          description: ID of the `Account`.
          required: true
          type: string
      produces:
        - application/json
      security:
        - oauth2: []
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              id: 402bc64b-a205-426d-b6b4-cf201b2ff863
              name: John D. Doe
              email: johndoe@test.com
              role: STAFF
              status: ACTIVE
              status_history:
                - status: ACTIVE
                  timestamp: '2023-02-01T15:55:00.000Z'
                - status: INACTIVE
                  timestamp: '2023-02-02T15:55:00.000Z'
                - status: INACTIVE
                  timestamp: '2023-02-03T17:20:00.000Z'
              created_at: '2023-02-03T15:55:00.000Z'
              updated_at: '2023-02-03T17:20:00.000Z'
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              email:
                type: string
              role:
                type: string
              status:
                type: string
              status_history:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: string
                    timestamp:
                      type: string
                  required:
                    - status
                    - timestamp
              created_at:
                type: string
              updated_at:
                type: string
            example:
              id: 402bc64b-a205-426d-b6b4-cf201b2ff863
              name: John D. Doe
              email: johndoe@test.com
              role: STAFF
              status: ACTIVE
              status_history:
                - status: ACTIVE
                  timestamp: '2023-02-01T15:55:00.000Z'
                - status: INACTIVE
                  timestamp: '2023-02-02T15:55:00.000Z'
                - status: INACTIVE
                  timestamp: '2023-02-03T17:20:00.000Z'
              created_at: '2023-02-03T15:55:00.000Z'
              updated_at: '2023-02-03T17:20:00.000Z'
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized
        '403':
          description: Forbidden
          headers: {}
          examples:
            application/json:
              error: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Forbidden
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not found
      summary: Update an Account
      operationId: Update an Account
      description: >-
        Owners can update other accounts' name, email, password, status and
        possibly role.


        Staff can only manipulate their own account's name.
      tags:
        - Accounts
      parameters:
        - *ref_3
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              status:
                type: string
              password:
                type: string
            example:
              name: John D. Doe
              email: johndoe@test.com
              status: ACTIVE
              password: random-digits
      produces:
        - application/json
      security:
        - oauth2: []
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/json:
              id: 402bc64b-a205-426d-b6b4-cf201b2ff863
              name: John D. Doe
              email: johndoe@test.com
              role: STAFF
              status: ACTIVE
              status_history:
                - status: ACTIVE
                  timestamp: '2023-02-01T15:55:00.000Z'
              created_at: '2023-02-03T15:55:00.000Z'
              updated_at: '2023-02-03T15:55:00.000Z'
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              email:
                type: string
              role:
                type: string
              status:
                type: string
              status_history:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: string
                    timestamp:
                      type: string
              created_at:
                type: string
              updated_at:
                type: string
            example:
              id: 402bc64b-a205-426d-b6b4-cf201b2ff863
              name: John D. Doe
              email: johndoe@test.com
              role: STAFF
              status: ACTIVE
              status_history:
                - status: ACTIVE
                  timestamp: '2023-02-01T15:55:00.000Z'
              created_at: '2023-02-03T15:55:00.000Z'
              updated_at: '2023-02-03T15:55:00.000Z'
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized
        '403':
          description: Forbidden
          headers: {}
          examples:
            application/json:
              error: Forbidden
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Forbidden
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not found
      summary: Create an Account
      operationId: Create an Account
      description: Owners can create new accounts.
      tags:
        - Accounts
      parameters:
        - *ref_3
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
            example:
              name: John D. Doe
              email: johndoe@test.com
              password: random-digits
      produces:
        - application/json
      security:
        - oauth2: []
  /registration/receiver/{token}:
    get:
      responses:
        '200':
          description: Token is valid and the webpage will be loaded normally.
          headers: {}
          examples:
            text/html: >
              <!doctype html><title>To be implemented</title><body>The website
              html will show up here.</body>
        '401':
          description: >-
            The token is invalid or expired. If it's just expired, an SMS will
            be sent to the user phone number with the new token.
          headers: {}
          examples:
            text/html: >
              <!doctype html><title>To be implemented</title><body>The provided
              token is invalid or expired. If it is expired, a new token will be
              sent to the user phone number ⏳.</body>
      summary: Load the PII Confirmation Webpage
      operationId: Load the PII Confirmation Webpage
      description: >-
        This is the endpoint the browser will reach with the first token, so the
        user can confirm their PII information and then launch the wallet
        (Vibrant) through a deep link.
      tags:
        - Registration
      parameters:
        - name: token
          in: path
          description: >-
            Is a unique token that expires within a {configurable} number of
            days and is sent to the user in order to start the registration
            process.
          required: true
          type: string
      produces:
        - text/html
  /registration/receiver/{token}/wallet_info:
    get:
      responses:
        '200':
          description: Token is valid and the webpage will be loaded normally.
          headers: {}
          examples:
            text/html: |
              {
                  "wallet_name": "Vibrant",
                  "home_domain": "https://vibrantapp.com/",
                  "icon_url": "https://assets-global.website-files.com/5f96d344ab2f71b1d1961172/6102b8d95dca76b415a0f9bc_Logo.png",
                  "help_url": "https://support.vibrantapp.com/",
                  "apple_store_url": "https://apps.apple.com/us/app/id1514223107",
                  "google_store_url": "https://play.google.com/store/apps/details?id=io.sunship.app",
                  "pii_name": "Date of Birth",
                  "pii_type": "date"
              }
        '401':
          description: >-
            The token is invalid or expired. If it's just expired, an SMS will
            be sent to the user phone number with the new token.
          headers: {}
          examples:
            text/html: |
              {
                  "error": "Unauthorized.",
                  "extras": {
                      "code": "401_1",
                      "details": "The token is invalid or expired."
                  }
              }            
      summary: Get placeholder Info
      operationId: Get placeholder Info
      description: >-
        This endpoint will provide the webpage with all the info that can be
        customizable depending on the wallet used. Things like wallet name, icon
        and links to the store will be provided by this endpoint.
      tags:
        - Registration
      parameters:
        - name: token
          in: path
          description: >-
            Is a unique token that expires within a {configurable} number of
            days and is sent to the user in order to start the registration
            process.
          required: true
          type: string
      produces:
        - text/html
  /registration/receiver/{token}/send_otp:
    post:
      responses:
        '200':
          description: The OTP was successfully sent.
          headers: {}
          examples:
            application/json:
              status: ok
              sanitized_phone_number: '* *** *** *415'
          schema:
            type: object
            properties:
              status:
                type: string
              sanitized_phone_number:
                type: string
            example:
              status: ok
              sanitized_phone_number: '* *** *** *415'
        '401':
          description: The token is invalid or expired.
          headers: {}
          examples:
            application/json:
              error: Unauthorized.
              extras:
                code: '401_1'
                details: The token is invalid or expired.
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  code:
                    type: string
                  details:
                    type: string
            example:
              error: Unauthorized.
              extras:
                code: '401_1'
                details: The token is invalid or expired.
        '429':
          description: >-
            An OTP was sent to the given user recently and hasn't expired yet.
            Only after expired it will be sent to the user again.
          headers: {}
          examples:
            application/json:
              error: Too many requests.
              extras:
                code: '429_1'
                details: >-
                  An OTP was sent to the given user recently and hasn't expired
                  yet. Only after expired it will be sent to the user again.
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  code:
                    type: string
                  details:
                    type: string
            example:
              error: Too many requests.
              extras:
                code: '429_1'
                details: >-
                  An OTP was sent to the given user recently and hasn't expired
                  yet. Only after expired it will be sent to the user again.
      summary: Send OTP to the Receiver's Phone
      operationId: Send OTP to the Receiver's Phone
      description: >-
        This is the endpoint that will trigger an SMS sharing an OTP with the
        user phone.
      tags:
        - Registration
      parameters:
        - name: token
          in: path
          description: >-
            Is a unique token that expires within a {configurable} number of
            days and is sent to the user in order to start the registration
            process.
          required: true
          type: string
      produces:
        - application/json
  /registration/receiver/{token}/validate:
    post:
      responses:
        '200':
          description: >-
            The OTP + PII were successfully validated. This response will
            comtain the link used to launch Vibrant and finalize the wallet<>SDP
            registration step from there.
          headers: {}
          examples:
            application/json:
              deep_link: vibrantapp://stellar-disbursement-platform?id=1&token=123&sign=abc
          schema:
            type: object
            properties:
              deep_link:
                type: string
            example:
              deep_link: vibrantapp://stellar-disbursement-platform?id=1&token=123&sign=abc
        '400':
          description: The token, PII or OTP provided are invalid.
          headers: {}
          examples:
            application/json:
              error: Bad request.
              extras:
                code: '400_1'
                details: The token, PII or OTP provided are incorrect.
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  code:
                    type: string
                  details:
                    type: string
            example:
              error: Bad request.
              extras:
                code: '400_1'
                details: The token, PII or OTP provided are incorrect.
      summary: Validate OTP + PII
      operationId: Validate OTP + PII
      description: >-
        This is the endpoint that will be used to validate the OTP + PII. It
        will retiurn the deep link used to launch the wallet application
        (Vibrant).
      tags:
        - Registration
      parameters:
        - name: token
          in: path
          description: >-
            Is a unique token that expires within a {configurable} number of
            days and is sent to the user in order to start the registration
            process.
          required: true
          type: string
        - name: body
          in: body
          schema:
            type: object
            properties:
              pii:
                type: string
              otp:
                type: string
            example:
              pii: '2000-01-01'
              otp: 123abc
      produces:
        - application/json
  /.well-known/stellar.toml:
    get:
      responses:
        '200':
          description: Token is valid and the webpage will be loaded normally.
          headers: {}
          examples:
            text/toml: >
              NETWORK_PASSPHRASE="Test SDF Network ; September 2015"

              SIGNING_KEY="GC4HAYCFQYQLJV5SE6FB3LGC37D6XGIXGMAXCXWNBLH7NWW2JH4OZLHQ"

              WEB_AUTH_ENDPOINT="https://localhost:8000/sep10_auth"
      summary: Stellar toml
      operationId: Stellar toml
      description: >-
        This is the endpoint where the wallet will gather the SEP-10 server url
        and SEP-10 signing public key.
      tags:
        - Registration
      parameters: []
      produces:
        - text/toml
  /WEB_AUTH_ENDPOINT:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              transaction: >-
                AAAAAgAAAADIiRu2BrqqeOcP28PWCkD4D5Rjjsqh71HwvqFX+F4VXAAAAGQAAAAAAAAAAAAAAAEAAAAAXzrUcQAAAABfOtf1AAAAAAAAAAEAAAABAAAAAEEB8rhqNa70RYjaNnF1ARE2CbL50iR9HPXST/fImJN1AAAACgAAADB0aGlzaXNhdGVzdC5zYW5kYm94LmFuY2hvci5hbmNob3Jkb21haW4uY29tIGF1dGgAAAABAAAAQGdGOFlIQm1zaGpEWEY0L0VJUFZucGVlRkxVTDY2V0tKMVBPYXZuUVVBNjBoL09XaC91M2Vvdk54WFJtSTAvQ2UAAAAAAAAAAfheFVwAAABAheKE1HjGnUCNwPbX8mz7CqotShKbA+xM2Hbjl6X0TBpEprVOUVjA6lqMJ1j62vrxn1mF3eJzsLa9s9hRofG3Ag==
              network_passphrase: Test SDF Network ; September 2015
          schema:
            type: object
            properties:
              transaction:
                type: string
              network_passphrase:
                type: string
            example:
              transaction: >-
                AAAAAgAAAADIiRu2BrqqeOcP28PWCkD4D5Rjjsqh71HwvqFX+F4VXAAAAGQAAAAAAAAAAAAAAAEAAAAAXzrUcQAAAABfOtf1AAAAAAAAAAEAAAABAAAAAEEB8rhqNa70RYjaNnF1ARE2CbL50iR9HPXST/fImJN1AAAACgAAADB0aGlzaXNhdGVzdC5zYW5kYm94LmFuY2hvci5hbmNob3Jkb21haW4uY29tIGF1dGgAAAABAAAAQGdGOFlIQm1zaGpEWEY0L0VJUFZucGVlRkxVTDY2V0tKMVBPYXZuUVVBNjBoL09XaC91M2Vvdk54WFJtSTAvQ2UAAAAAAAAAAfheFVwAAABAheKE1HjGnUCNwPbX8mz7CqotShKbA+xM2Hbjl6X0TBpEprVOUVjA6lqMJ1j62vrxn1mF3eJzsLa9s9hRofG3Ag==
              network_passphrase: Test SDF Network ; September 2015
        '400':
          description: If some information was missing or invalid.
          headers: {}
          examples:
            application/json:
              error: Bad request.
              extras:
                account: account cannot be empty
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  account:
                    type: string
            example:
              error: Bad request.
              extras:
                account: account cannot be empty
      summary: GET SEP-10 Challenge Transaction
      operationId: GET SEP-10 Challenge Transaction
      description: >-
        The SEP-10 endpoint where the wallet will get the challenge transaction
        to be signed. More information
        [here](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0010.md#challenge).


        This endpoint can change, but will be provided in the tomle file under
        the `WEB_AUTH_ENDPOINT` variable.
      tags:
        - Registration
      parameters:
        - name: account
          in: query
          description: >-
            The Client Account, which can be a stellar account (G...) or muxed
            account (M...) that the Client wishes to authenticate with the
            Server..
          required: true
          type: string
        - name: memo
          in: query
          description: >-
            The memo to attach to the challenge transaction. Only permitted if a
            Stellar account (G...) is used. The memo must be of type id. Other
            memo types are not supported.
          required: false
          type: string
        - name: client_domain
          in: query
          description: a Client Domain. Need to be supplied by all Clients/Wallets.
          required: true
          type: string
      produces:
        - application/json
    post:
      responses:
        '200':
          description: SEP-10 handshake was successful.
          headers: {}
          examples:
            application/json:
              token: >-
                eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJHQTZVSVhYUEVXWUZJTE5VSVdBQzM3WTRRUEVaTVFWREpIREtWV0ZaSjJLQ1dVQklVNUlYWk5EQSIsImp0aSI6IjE0NGQzNjdiY2IwZTcyY2FiZmRiZGU2MGVhZTBhZDczM2NjNjVkMmE2NTg3MDgzZGFiM2Q2MTZmODg1MTkwMjQiLCJpc3MiOiJodHRwczovL2ZsYXBweS1iaXJkLWRhcHAuZmlyZWJhc2VhcHAuY29tLyIsImlhdCI6MTUzNDI1Nzk5NCwiZXhwIjoxNTM0MzQ0Mzk0fQ.8nbB83Z6vGBgC1X9r3N6oQCFTBzDiITAfCJasRft0z0
          schema:
            type: object
            properties:
              token:
                type: string
            example:
              token: >-
                eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJHQTZVSVhYUEVXWUZJTE5VSVdBQzM3WTRRUEVaTVFWREpIREtWV0ZaSjJLQ1dVQklVNUlYWk5EQSIsImp0aSI6IjE0NGQzNjdiY2IwZTcyY2FiZmRiZGU2MGVhZTBhZDczM2NjNjVkMmE2NTg3MDgzZGFiM2Q2MTZmODg1MTkwMjQiLCJpc3MiOiJodHRwczovL2ZsYXBweS1iaXJkLWRhcHAuZmlyZWJhc2VhcHAuY29tLyIsImlhdCI6MTUzNDI1Nzk5NCwiZXhwIjoxNTM0MzQ0Mzk0fQ.8nbB83Z6vGBgC1X9r3N6oQCFTBzDiITAfCJasRft0z0
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: The provided transaction is not valid
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: The provided transaction is not valid
      summary: POST SEP-10 Challenge Transaction
      operationId: POST SEP-10 Challenge Transaction
      description: >-
        The SEP-10 endpoint where the wallet will get the challenge transaction
        to be signed. More information
        [here](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0010.md#challenge).


        This endpoint can change, but will be provided in the tomle file under
        the `WEB_AUTH_ENDPOINT` variable.
      tags:
        - Registration
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              transaction:
                type: string
            example:
              transaction: >-
                AAAAAgAAAADIiRu2BrqqeOcP28PWCkD4D5Rjjsqh71HwvqFX+F4VXAAAAGQAAAAAAAAAAAAAAAEAAAAAXzrUcQAAAABfOtf1AAAAAAAAAAEAAAABAAAAAEEB8rhqNa70RYjaNnF1ARE2CbL50iR9HPXST/fImJN1AAAACgAAADB0aGlzaXNhdGVzdC5zYW5kYm94LmFuY2hvci5hbmNob3Jkb21haW4uY29tIGF1dGgAAAABAAAAQGdGOFlIQm1zaGpEWEY0L0VJUFZucGVlRkxVTDY2V0tKMVBPYXZuUVVBNjBoL09XaC91M2Vvdk54WFJtSTAvQ2UAAAAAAAAAAvheFVwAAABAheKE1HjGnUCNwPbX8mz7CqotShKbA+xM2Hbjl6X0TBpEprVOUVjA6lqMJ1j62vrxn1mF3eJzsLa9s9hRofG3AsiYk3UAAABArIrkvqmA0V9lIZcVyCUdja6CiwkPwsV8BfI4CZOyR1Oq7ysvNJWwY0G42dpxN9OP1qz4dum8apG2hqvxVWjkDQ==
      produces:
        - application/json
  /registration/wallet:
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              status: ok
          schema:
            type: object
            properties:
              status:
                type: string
            example:
              status: ok
        '400':
          description: The id, token, sign or phone_number provided are incorrect.
          headers: {}
          examples:
            application/json:
              error: Unauthorized.
              extras:
                code: '400_2'
                details: The id, token, sign or phone_number provided are incorrect.
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  code:
                    type: string
                  details:
                    type: string
            example:
              error: Unauthorized.
              extras:
                code: '400_2'
                details: The id, token, sign or phone_number provided are incorrect.
        '401':
          description: The SEP-10 token is invalid.
          headers: {}
          examples:
            application/json:
              error: Unauthorized
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Unauthorized
      summary: Register the Stellar Account for the User
      operationId: Register the Stellar Account for the User
      description: >-
        This is the endpoint that will be used to register the Stellar public
        key with the SDP user. It will be using the data provided in the deep
        link, that should have the following format:
        `vibrantapp://stellar-disbursement-platform?id=1&token=123&sign=abc`.
      tags:
        - Registration
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: number
              token:
                type: string
              sign:
                type: string
              phone_number:
                type: string
            example:
              id: 1
              token: 1234abcd
              sign: abcd1234
              phone_number: '+1415555555'
      produces:
        - application/json
      security:
        - oauth2: []
    get:
      responses:
        '200':
          description: >-
            The account containing the given public key has already been
            registered with the SDP.
          headers: {}
          examples:
            application/json:
              status: ok
          schema:
            type: object
            properties:
              status:
                type: string
            example:
              status: ok
        '401':
          description: The SEP-10 token is invalid.
          headers: {}
          examples:
            application/json:
              error: Unauthorized
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Unauthorized
        '404':
          description: >-
            The account containing the given public key has never been
            registered with the SDP.
          headers: {}
          examples:
            application/json:
              error: Not found.
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not found.
      summary: Verify if Stellar Account is Registered
      operationId: Verify if Stellar Account is Registered
      description: >-
        This is the endpoint that will be used to verify if the Stellar public
        key is already registered with the SDP user.
      tags:
        - Registration
      parameters: []
      produces:
        - application/json
      security:
        - oauth2: []
  /profile:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              first_name: FirstName
              last_name: LastName
              email: email@email.com
              roles:
                - developer
              organization_name: My Organization Name
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              roles:
                type: array
                items:
                  type: string
              organization_name:
                type: string
            example:
              first_name: FirstName
              last_name: LastName
              email: email@email.com
              roles:
                - developer
              organization_name: My Organization Name
      summary: Get Profile
      operationId: Get Profile
      description: ''
      tags:
        - Profile
      parameters: []
      produces:
        - application/json
      security:
        - oauth2: []
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              message: user profile updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: user profile updated successfully
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized.
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized.
      summary: Patch User Profile
      operationId: Patch User Profile
      description: >-
        Note that all fields are optional but at least one should be sent in the
        request.
      tags:
        - Profile
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
            example:
              first_name: FirstName
              last_name: LastName
              email: email@email.com
              password: mysecret
      produces:
        - application/json
      security:
        - oauth2: []
  /organization:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              name: My Organization Name
              logo_url: https://localhost:8000/organization/logo?token=mytoken
              distribution_account_public_key: G...
              timezone_utc_offset: '-03:00'
          schema:
            type: object
            properties:
              name:
                type: string
              logo_url:
                type: string
              distribution_account_public_key:
                type: string
              timezone_utc_offset:
                type: string
            example:
              name: My Organization Name
              logo_url: https://localhost:8000/organization/logo?token=mytoken
              distribution_account_public_key: G...
              timezone_utc_offset: '-03:00'
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized.
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized.
      summary: Get Organization Info
      operationId: Get Organization Info
      description: ''
      tags:
        - Profile
      parameters: []
      produces:
        - application/json
      security:
        - oauth2: []
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              message: organization profile updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: organization profile updated successfully
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized.
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized.
      summary: Patch Organization Profile
      operationId: Patch Organization Profile
      description: >-
        Example of request in `Javascript` with `fetch`. Note that both fields
        are `optional`, but, at least `one` should be sent in the request.


        ```js

        const form = new FormData();

        form.append("logo", "/path/to/logo/logo.png");

        form.append("data", `{"organization_name": "My Company",
        "timezone_utc_offset": "-03:00"}`);


        const options = {
          method: 'PATCH',
          headers: {
            Authorization: 'Bearer mytoken'
          }
        };


        options.body = form;


        fetch('http://localhost:8000/profile/organization', options)
          .then(response => response.json())
          .then(response => console.log(response))
          .catch(err => console.error(err));
        ```


        **Note**: *It's not necessary to set the header `Content-Type` for this
        request, it's set automaticaly by the HTTP client.*
      tags:
        - Profile
      parameters: []
      produces:
        - application/json
      security:
        - oauth2: []
  /users:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              - id: 7a4c6555-1f73-49b3-a211-f95bd2b8ec90
                first_name: John
                last_name: Doe
                email: email@email.com
                roles:
                  - developer
                is_active: true
              - id: 5f4df1dd-c84f-482a-84ad-541ffd46e75a
                first_name: Jane
                last_name: Doe
                email: email@email.com
                roles:
                  - financial_controller
                is_active: false
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
                is_active:
                  type: boolean
              required:
                - id
                - first_name
                - last_name
                - email
                - roles
                - is_active
            example:
              - id: 7a4c6555-1f73-49b3-a211-f95bd2b8ec90
                first_name: John
                last_name: Doe
                email: email@email.com
                roles:
                  - developer
                is_active: true
              - id: 5f4df1dd-c84f-482a-84ad-541ffd46e75a
                first_name: Jane
                last_name: Doe
                email: email@email.com
                roles:
                  - financial_controller
                is_active: false
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized.
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized.
      summary: Get All Users
      operationId: Get All Users
      description: Returns all Users registered in the SDP.
      tags:
        - Users
      parameters: []
      produces:
        - application/json
      security:
        - oauth2: []
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/json:
              id: 5ca230c9-da95-4bd1-b2a2-aa5d0df65efd
              first_name: John
              last_name: Doe
              roles:
                - business
              email: email@email.com
          schema:
            type: object
            properties:
              id:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              roles:
                type: array
                items:
                  type: string
              email:
                type: string
            example:
              id: 5ca230c9-da95-4bd1-b2a2-aa5d0df65efd
              first_name: John
              last_name: Doe
              roles:
                - business
              email: email@email.com
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized.
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized.
      summary: Create User
      operationId: Create User
      description: Creates the authentication user and sends the invitation e-mail.
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              roles:
                type: array
                items:
                  type: string
              email:
                type: string
            example:
              first_name: John
              last_name: Doe
              roles:
                - business
              email: email@email.com
      produces:
        - application/json
      security:
        - oauth2: []
  /users/activation:
    patch:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/json:
              message: user activation was updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: user activation was updated successfully
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized.
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized.
      summary: Patch User Activation
      operationId: Patch User Activation
      description: Patchs the authentication user's activation in the SDP.
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              user_id:
                type: string
              is_active:
                type: boolean
            example:
              user_id: 5ca230c9-da95-4bd1-b2a2-aa5d0df65efd
              is_active: false
      produces:
        - application/json
      security:
        - oauth2: []
  /users/roles:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              roles:
                - developer
                - financial_controller
                - business
                - owner
          schema:
            type: object
            properties:
              roles:
                type: array
                items:
                  type: string
            example:
              roles:
                - developer
                - financial_controller
                - business
                - owner
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized.
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized.
      summary: Get All Roles
      operationId: Get All Roles
      description: Returns all roles that exists in the SDP.
      tags:
        - Users
      parameters: []
      produces:
        - application/json
      security:
        - oauth2: []
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              message: user roles were updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: user roles were updated successfully
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: Not authorized.
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not authorized.
      summary: Patch User Role
      operationId: Patch User Role
      description: Patchs the authentication user's roles.
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              user_id:
                type: string
              roles:
                type: array
                items:
                  type: string
            example:
              user_id: 5ca230c9-da95-4bd1-b2a2-aa5d0df65efd
              roles:
                - developer
      produces:
        - application/json
      security:
        - oauth2: []
definitions:
  Authentication: {}
  Disbursement Collection: {}
  Disbursement Details: {}
  Disbursement Receivers: {}
  Disbursement Instructions: {}
  Disbursement Status: {}
  Payment Collection: {}
  Payment Detail: {}
  Receiver Collection: {}
  Receiver Details: {}
  General Statistics: {}
  Disbursements Statistics: {}
  Account Collection: {}
  Account Detail: {}
  Webpage - PII Confirmation: {}
  Vibrant - Stellar Public Key Confirmation: {}
  User Profile: {}
  Organization Profile: {}
  Users Colletion: {}
  Roles: {}
securityDefinitions:
  oauth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: ''
    tokenUrl: ''
    scopes: {}
tags:
  - name: Authentication
    description: Endpoints related to authentication.
  - name: Disbursements
    description: Endpoints related to disbursements.
  - name: Payments
    description: Endpoints related to payments.
  - name: Receivers
    description: >-
      Endpoints related to receivers. The receiver is the user that is
      going to receive the disbursement.
  - name: Statistics
    description: >-
      Endpoints related to statistics that provide general aggregated data, as
      well as disbursement-specific aggregated data.


      About the aggregated values:


      - `DRAFT` are payments that are pending staff action


      - `READY` are payments that are pending user action


      - `PENDING` are payments that were already submitted to the network but
      are pending network response


      - `PAUSED` are payments that were previously queued but were paused due to
      any internal process. You could say they are pending staff action


      - `SUCCESSFUL` are payments that were successfully delivered to the
      receiver wallet


      - `FAILED` are payments that were submitted to the network but did not go
      through due to any reason


      > ATTENTION: the historical data (`successful_payments_history` field) is
      still pending decision. 

      > Please don't commit to a long-lasting implementation there before
      confirming it with Tori.

      > It's likely not making into the MVP.
  - name: Accounts
    description: >-
      Account management endpoints where the user can update their own account,
      or where the owner can add new users.
  - name: Registration
    description: >-
      The Registration endpoints are the ones needed to register 
      receivers with the SDP. 


      Some of them need to be used by the PII confirmation webpage while the
      others need to be used by the wallet.
  - name: Profile
    description: Endpoints related to user profiles.
  - name: Users
    description: >-
      Defines all the endpoints regarding users of the SDP.